{"ast":null,"code":"import React,{useState,useRef,useEffect}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function App(){const[input,setInput]=useState(\"\");const[chatLog,setChatLog]=useState([]);const fileInputRef=useRef(null);const chatEndRef=useRef(null);// 이미지를 Base64로 변환\nconst fileToBase64=file=>new Promise((resolve,reject)=>{const reader=new FileReader();reader.readAsDataURL(file);reader.onload=()=>resolve(reader.result);reader.onerror=error=>reject(error);});const sendMessage=async function(){let imageDataUrl=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;if(!input.trim()&&!imageDataUrl)return;// 사용자 메시지 또는 이미지 추가\nif(input.trim())setChatLog(prev=>[...prev,{sender:\"user\",text:input}]);if(imageDataUrl)setChatLog(prev=>[...prev,{sender:\"user\",image:imageDataUrl}]);try{// 백엔드에 메시지와 이미지(데이터 URL) 중 하나 이상 전송\nconst body=imageDataUrl?{image_url:imageDataUrl}:{message:input};const response=await fetch(\"/api/chat\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(body)});const data=await response.json();// 챗봇 응답 메시지 또는 이미지 출력\nif(data.reply){setChatLog(prev=>[...prev,{sender:\"bot\",text:data.reply}]);}if(data.reply_image_url){setChatLog(prev=>[...prev,{sender:\"bot\",image:data.reply_image_url}]);}}catch(error){setChatLog(prev=>[...prev,{sender:\"bot\",text:\"서버와 통신 중 오류가 발생했습니다.\"}]);}setInput(\"\");};const handleKeyPress=e=>{if(e.key===\"Enter\")sendMessage();};const handleImageChange=async e=>{const file=e.target.files[0];if(!file)return;const base64=await fileToBase64(file);sendMessage(base64);e.target.value=null;// 파일 선택 초기화\n};useEffect(()=>{if(chatEndRef.current){chatEndRef.current.scrollIntoView({behavior:\"smooth\"});}},[chatLog]);return/*#__PURE__*/_jsxs(\"div\",{style:{maxWidth:600,margin:\"20px auto\",fontFamily:\"Arial\"},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"FastAPI + React \\uCC57\\uBD07\"}),/*#__PURE__*/_jsxs(\"div\",{style:{border:\"1px solid #ccc\",height:400,padding:10,overflowY:\"auto\",marginBottom:10},children:[chatLog.map((msg,i)=>/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:msg.sender===\"user\"?\"right\":\"left\",margin:\"8px 0\"},children:[msg.text&&/*#__PURE__*/_jsx(\"span\",{style:{display:\"inline-block\",padding:\"8px 12px\",borderRadius:15,backgroundColor:msg.sender===\"user\"?\"#007bff\":\"#e4e6eb\",color:msg.sender===\"user\"?\"white\":\"black\",maxWidth:\"80%\",wordBreak:\"break-word\"},children:msg.text}),msg.image&&/*#__PURE__*/_jsx(\"img\",{src:msg.image,alt:\"chat-img\",style:{maxWidth:\"80%\",borderRadius:15,marginTop:msg.text?5:0}})]},i)),/*#__PURE__*/_jsx(\"div\",{ref:chatEndRef})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\uBA54\\uC2DC\\uC9C0\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",value:input,onChange:e=>setInput(e.target.value),onKeyPress:handleKeyPress,style:{width:\"100%\",padding:10,fontSize:16}}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\"image/*\",onChange:handleImageChange,style:{marginTop:10}}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>sendMessage(),style:{marginTop:10,width:\"100%\"},children:\"\\uC804\\uC1A1\"})]});}","map":{"version":3,"names":["React","useState","useRef","useEffect","jsx","_jsx","jsxs","_jsxs","App","input","setInput","chatLog","setChatLog","fileInputRef","chatEndRef","fileToBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","sendMessage","imageDataUrl","arguments","length","undefined","trim","prev","sender","text","image","body","image_url","message","response","fetch","method","headers","JSON","stringify","data","json","reply","reply_image_url","handleKeyPress","e","key","handleImageChange","target","files","base64","value","current","scrollIntoView","behavior","style","maxWidth","margin","fontFamily","children","border","height","padding","overflowY","marginBottom","map","msg","i","textAlign","display","borderRadius","backgroundColor","color","wordBreak","src","alt","marginTop","ref","type","placeholder","onChange","onKeyPress","width","fontSize","accept","onClick"],"sources":["E:/chatPrac/FE/src/App.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\n\r\nexport default function App() {\r\n  const [input, setInput] = useState(\"\");\r\n  const [chatLog, setChatLog] = useState([]);\r\n  const fileInputRef = useRef(null);\r\n  const chatEndRef = useRef(null);\r\n\r\n  // 이미지를 Base64로 변환\r\n  const fileToBase64 = (file) =>\r\n    new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = (error) => reject(error);\r\n    });\r\n\r\n  const sendMessage = async (imageDataUrl = null) => {\r\n    if (!input.trim() && !imageDataUrl) return;\r\n\r\n    // 사용자 메시지 또는 이미지 추가\r\n    if (input.trim())\r\n      setChatLog((prev) => [...prev, { sender: \"user\", text: input }]);\r\n    if (imageDataUrl)\r\n      setChatLog((prev) => [...prev, { sender: \"user\", image: imageDataUrl }]);\r\n\r\n    try {\r\n      // 백엔드에 메시지와 이미지(데이터 URL) 중 하나 이상 전송\r\n      const body = imageDataUrl\r\n        ? { image_url: imageDataUrl }\r\n        : { message: input };\r\n\r\n      const response = await fetch(\"/api/chat\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      // 챗봇 응답 메시지 또는 이미지 출력\r\n      if (data.reply) {\r\n        setChatLog((prev) => [...prev, { sender: \"bot\", text: data.reply }]);\r\n      }\r\n      if (data.reply_image_url) {\r\n        setChatLog((prev) => [\r\n          ...prev,\r\n          { sender: \"bot\", image: data.reply_image_url },\r\n        ]);\r\n      }\r\n    } catch (error) {\r\n      setChatLog((prev) => [\r\n        ...prev,\r\n        { sender: \"bot\", text: \"서버와 통신 중 오류가 발생했습니다.\" },\r\n      ]);\r\n    }\r\n\r\n    setInput(\"\");\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === \"Enter\") sendMessage();\r\n  };\r\n\r\n  const handleImageChange = async (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n\r\n    const base64 = await fileToBase64(file);\r\n    sendMessage(base64);\r\n    e.target.value = null; // 파일 선택 초기화\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (chatEndRef.current) {\r\n      chatEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  }, [chatLog]);\r\n\r\n  return (\r\n    <div style={{ maxWidth: 600, margin: \"20px auto\", fontFamily: \"Arial\" }}>\r\n      <h2>FastAPI + React 챗봇</h2>\r\n      <div\r\n        style={{\r\n          border: \"1px solid #ccc\",\r\n          height: 400,\r\n          padding: 10,\r\n          overflowY: \"auto\",\r\n          marginBottom: 10,\r\n        }}\r\n      >\r\n        {chatLog.map((msg, i) => (\r\n          <div\r\n            key={i}\r\n            style={{\r\n              textAlign: msg.sender === \"user\" ? \"right\" : \"left\",\r\n              margin: \"8px 0\",\r\n            }}\r\n          >\r\n            {msg.text && (\r\n              <span\r\n                style={{\r\n                  display: \"inline-block\",\r\n                  padding: \"8px 12px\",\r\n                  borderRadius: 15,\r\n                  backgroundColor: msg.sender === \"user\" ? \"#007bff\" : \"#e4e6eb\",\r\n                  color: msg.sender === \"user\" ? \"white\" : \"black\",\r\n                  maxWidth: \"80%\",\r\n                  wordBreak: \"break-word\",\r\n                }}\r\n              >\r\n                {msg.text}\r\n              </span>\r\n            )}\r\n            {msg.image && (\r\n              <img\r\n                src={msg.image}\r\n                alt=\"chat-img\"\r\n                style={{\r\n                  maxWidth: \"80%\",\r\n                  borderRadius: 15,\r\n                  marginTop: msg.text ? 5 : 0,\r\n                }}\r\n              />\r\n            )}\r\n          </div>\r\n        ))}\r\n        <div ref={chatEndRef} />\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"메시지를 입력하세요\"\r\n        value={input}\r\n        onChange={(e) => setInput(e.target.value)}\r\n        onKeyPress={handleKeyPress}\r\n        style={{ width: \"100%\", padding: 10, fontSize: 16 }}\r\n      />\r\n      <input\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={handleImageChange}\r\n        style={{ marginTop: 10 }}\r\n      />\r\n      <button onClick={() => sendMessage()} style={{ marginTop: 10, width: \"100%\" }}>\r\n        전송\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}